{"version":3,"file":"static/js/999.a69c6c47.chunk.js","mappings":"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","sources":["webpack://woodluck/./src/components/Pages/Contacts/Contacts.module.css?8e27","webpack://woodluck/./src/components/Forms/ContactForm.module.css?3c99","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","components/Forms/ContactForm.jsx","components/Pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__9kQfa\",\"mapOverlay\":\"Contacts_mapOverlay__JEKhK\",\"map\":\"Contacts_map__JEYWx\",\"textOverlay\":\"Contacts_textOverlay__qDL8l\",\"contactsPhone\":\"Contacts_contactsPhone__2x2rk\",\"userContacts\":\"Contacts_userContacts__OsIqY\"};","// extracted by mini-css-extract-plugin\nexport default {\"formOverlay\":\"ContactForm_formOverlay__IOSAR\",\"form\":\"ContactForm_form__KR92z\",\"userInfo\":\"ContactForm_userInfo__FalI8\",\"comments\":\"ContactForm_comments__FMKZ2\",\"block\":\"ContactForm_block__XkMpd\",\"formButtonContainer\":\"ContactForm_formButtonContainer__lcBUE\"};","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.7.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, {useRef, useState} from 'react';\r\nimport s from \"./ContactForm.module.css\";\r\nimport emailjs from '@emailjs/browser';\r\n\r\nconst ContactForm = () => {\r\n\r\n    const form = useRef()\r\n\r\n    const [name, setName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [comments, setComments] = useState('')\r\n    const [send, setSend] = useState(false)\r\n\r\n    /*  const isValidPhone = (myPhone) => {\r\n          return /^\\+\\d{2}\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/.test(myPhone);\r\n      }\r\n      const isValidEmail = (Email) => {\r\n          return /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/.test(Email)\r\n      }\r\n      const isValidComments = (Comments) => {\r\n          return /^[\\u0400-\\u052F\\u2DE0-\\u2DFF\\uA640-\\uA69F']+$/.test(Comments)\r\n      }*/\r\n\r\n    const onNameChanged = (e) => {\r\n        let Name = e.target.value\r\n        setName(Name)\r\n    }\r\n    const onPhoneChanged = (e) => {\r\n        let Phone = e.target.value\r\n        setPhone(Phone)\r\n    }\r\n    const onEmailChanged = (e) => {\r\n        let Email = e.target.value\r\n        setEmail(Email)\r\n    }\r\n    const onCommentsChanged = (e) => {\r\n        let Comments = e.target.value\r\n        setComments(Comments)\r\n    }\r\n\r\n    const sendEmail = (e) => {\r\n        e.preventDefault()\r\n        //validation!!!\r\n        emailjs.sendForm('service_woe0854', 'template_q8cof3h', form.current, '96FteI58tmd_KJmx3')\r\n            .then((result) => {\r\n                setName(\"\")\r\n                setPhone(\"\")\r\n                setEmail(\"\")\r\n                setComments(\"\")\r\n                setSend(true)\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className={s.formOverlay}>\r\n            <form ref={form}\r\n                  className={s.form}\r\n                  onSubmit={sendEmail}>\r\n                <div className={s.comments}>\r\n                    <label htmlFor=\"text\">Коментарі:</label>\r\n                    <textarea type=\"text\"\r\n                              name=\"user_text\"\r\n                              value={comments}\r\n                              onChange={event => onCommentsChanged(event)}/>\r\n                    {send ?\r\n                        <div className={s.sending}>Повідомлення відправлене!</div> :\r\n                        <div className={s.formButtonContainer}>\r\n                            <button type=\"submit\">Відправити</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className={s.userInfo}>\r\n                    <div className={s.block}>\r\n                        <label htmlFor=\"text\">Ім'я:</label>\r\n                        <input type=\"text\"\r\n                               name=\"user_name\"\r\n                               value={name}\r\n                               onChange={event => onNameChanged(event)}\r\n                               required\r\n                        />\r\n                    </div>\r\n                    <div className={s.block}>\r\n                        <label htmlFor=\"text\">Телефон:</label>\r\n                        <input type=\"text\"\r\n                               name=\"user_phone\"\r\n                               value={phone}\r\n                               onChange={event => onPhoneChanged(event)}\r\n                               required\r\n                        />\r\n                    </div>\r\n                    <div className={s.block}>\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"text\"\r\n                               name=\"user_email\"\r\n                               value={email}\r\n                               onChange={event => onEmailChanged(event)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React, {useEffect} from 'react';\r\nimport s from \"./Contacts.module.css\"\r\nimport ContactForm from \"../../Forms/ContactForm\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst Contacts = () => {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n    return (\r\n        <div className={s.contacts}>\r\n            <div className={s.mapOverlay}>\r\n                <iframe className={s.map}\r\n                        title={\"map\"}\r\n                        src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d2571.8588622185207!2d24.0439831!3d49.8638958!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x473adcfd65a33b95%3A0xc0de2bf062cb85ee!2z0LLRg9C70LjRhtGPINCf0YDQvtC80LjRgdC70L7QstCwLCA2MCwg0JvRjNCy0ZbQsiwg0JvRjNCy0ZbQstGB0YzQutCwINC-0LHQu9Cw0YHRgtGMLCA3OTAwMA!5e0!3m2!1suk!2sua!4v1668024631364!5m2!1suk!2sua\"\r\n                        allowFullScreen=\"\" loading=\"lazy\"\r\n                        referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\r\n            </div>\r\n            <div className={s.textOverlay}>\r\n                <h2>Зв'язатися з нами:</h2>\r\n                <p>Львів, вул.Промислова 60</p>\r\n                <div className={s.contactsPhone}>\r\n                    <p>+38 096 6353223</p>\r\n                    <p>+38 073 145 9739</p>\r\n                </div>\r\n                <p>luckwood60@gmail.com</p>\r\n                <p>Пн – Пт  &nbsp; 9:00 - 18:00</p>\r\n            </div>\r\n            <ContactForm/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n\r\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","EmailJSResponseStatus","httpResponse","instance","TypeError","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","keys","forEach","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","useState","name","setName","phone","setPhone","email","setEmail","comments","setComments","setSend","className","s","ref","onSubmit","e","preventDefault","emailjs","current","then","result","error","console","log","htmlFor","type","value","onChange","event","Comments","onCommentsChanged","Name","onNameChanged","required","Phone","onPhoneChanged","Email","onEmailChanged","pathname","useLocation","useEffect","window","scrollTo","title","src","allowFullScreen","loading","referrerPolicy"],"sourceRoot":""}