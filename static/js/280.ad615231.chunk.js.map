{"version":3,"file":"static/js/280.ad615231.chunk.js","mappings":"6wBAuCA,EAvBqB,WACjB,IAAIA,EAAO,CACP,CAACC,GAAI,EAAGC,OAAQC,GAChB,CAACF,GAAI,EAAGC,OAAQE,GAChB,CAACH,GAAI,EAAGC,OAAQG,GAChB,CAACJ,GAAI,EAAGC,OAAQI,GAChB,CAACL,GAAI,EAAGC,OAAQK,GAChB,CAACN,GAAI,EAAGC,OAAQM,GAChB,CAACP,GAAI,EAAGC,OAAQO,GAChB,CAACR,GAAI,EAAGC,OAAQQ,GAChB,CAACT,GAAI,EAAGC,OAAQS,GAChB,CAACV,GAAI,GAAIC,OAAQU,GACjB,CAACX,GAAI,GAAIC,OAAQW,GACjB,CAACZ,GAAI,GAAIC,OAAQY,IAGrB,OACI,+BACG,SAACC,EAAA,EAAD,CAAaf,KAAMA,KAG7B,C,+ECpCD,EAA0B,4BAA1B,EAA6D,yBAA7D,EAA8F,0BAA9F,EAA+H,yB,SCmC/H,EAjCoB,SAAC,GAAY,IAAXA,EAAU,EAAVA,KAElB,GAAgCgB,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAOA,OACI,4BACI,iBAAKC,UAAWJ,EAAQ,UAAMK,EAAN,YAAiBA,GAAWA,EAApD,WACI,gBAAKC,IAAKJ,EAASK,IAAI,UACvB,mBAAQC,QAAS,kBAAMP,GAAY,EAAlB,EAAjB,wBAIJ,gBAAKG,UAAWC,EAAhB,SACKtB,EAAK0B,KAAI,SAACC,EAAMC,GACb,OACI,gBAAKP,UAAWC,EAEXG,QAAS,kBAlBhBI,EAkB+BF,EAAKzB,OAjBlDkB,EAAWS,QACXX,GAAY,GAFC,IAACW,CAkBgB,EAFd,UAGI,gBAAKN,IAAKI,EAAKzB,OAAQsB,IAAI,aAFrBI,EAKjB,QAIhB,C","sources":["components/GalleyPages/BedsideTable.jsx","webpack://woodluck/./src/components/GalleyPages/Galleryfunc/Galleyfunc.module.css?2a6c","components/GalleyPages/Galleryfunc/Galleryfunc.jsx"],"sourcesContent":["import React from 'react';\nimport img1 from \"../../images/BedsideTable/5.1.jpg\";\nimport img2 from \"../../images/BedsideTable/4.1.jpg\";\nimport img3 from \"../../images/BedsideTable/1.1.JPG\";\nimport img4 from \"../../images/BedsideTable/1.2.JPG\";\nimport img5 from \"../../images/BedsideTable/1.3.JPG\";\nimport img6 from \"../../images/BedsideTable/1.4.JPG\";\nimport img7 from \"../../images/BedsideTable/2.2.jpg\";\nimport img8 from \"../../images/BedsideTable/3.1.jpg\";\nimport img9 from \"../../images/BedsideTable/4.2.jpg\";\nimport img10 from \"../../images/BedsideTable/5.2.jpg\";\nimport img11 from \"../../images/BedsideTable/5.3.jpg\";\nimport img12 from \"../../images/BedsideTable/6.1.JPG\";\n\nimport Galleryfunc from \"./Galleryfunc/Galleryfunc\";\n\nconst BedsideTable = () => {\n    let data = [\n        {id: 1, imgSrc: img1},\n        {id: 2, imgSrc: img2},\n        {id: 3, imgSrc: img3},\n        {id: 4, imgSrc: img4},\n        {id: 5, imgSrc: img5},\n        {id: 6, imgSrc: img6},\n        {id: 7, imgSrc: img7},\n        {id: 8, imgSrc: img8},\n        {id: 9, imgSrc: img9},\n        {id: 10, imgSrc: img10},\n        {id: 11, imgSrc: img11},\n        {id: 12, imgSrc: img12},\n    ]\n\n    return (\n        <>\n           <Galleryfunc data={data}/>\n        </>\n    );\n};\n\nexport default BedsideTable;","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Galleyfunc_overlay__TBHue\",\"pics\":\"Galleyfunc_pics__fgqco\",\"modal\":\"Galleyfunc_modal__Mo1US\",\"open\":\"Galleyfunc_open__RQ-Bh\"};","import React, {useState} from 'react';\nimport s from \"./Galleyfunc.module.css\";\n\nconst Galleryfunc = ({data}) => {\n\n    const [modalImg, setModalImg] = useState(false);\n    const [tempImg, setTempImg] = useState('');\n\n    const getImage = (img) => {\n        setTempImg(img);\n        setModalImg(true);\n    }\n\n    return (\n        <div>\n            <div className={modalImg ? `${s.modal} ${s.open}` : s.modal}>\n                <img src={tempImg} alt=\"temp\"/>\n                <button onClick={() => setModalImg(false)}>\n                    &#10006;\n                </button>\n            </div>\n            <div className={s.overlay}>\n                {data.map((item, index) => {\n                    return (\n                        <div className={s.pics}\n                             key={index}\n                             onClick={() => getImage(item.imgSrc)}>\n                            <img src={item.imgSrc} alt=\"pictire\"/>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default Galleryfunc;"],"names":["data","id","imgSrc","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","Galleryfunc","useState","modalImg","setModalImg","tempImg","setTempImg","className","s","src","alt","onClick","map","item","index","img"],"sourceRoot":""}